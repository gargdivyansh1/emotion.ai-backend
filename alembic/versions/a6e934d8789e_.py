"""empty message

Revision ID: a6e934d8789e
Revises: 865c4e44b435
Create Date: 2025-04-05 10:13:43.673540

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a6e934d8789e'
down_revision: Union[str, None] = '865c4e44b435'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('jwt_token', sa.String(), nullable=True),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('two_factor_secret', sa.String(), nullable=True),
    sa.Column('emotion_data_access', sa.Boolean(), nullable=True),
    sa.Column('real_time_monitoring_access', sa.Boolean(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('can_manage_users', sa.Boolean(), nullable=True),
    sa.Column('can_export_reports', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('number_of_session_taken', sa.Integer(), nullable=True),
    sa.Column('number_of_alloted_sessions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('admin_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_actions_id'), 'admin_actions', ['id'], unique=False)
    op.create_table('emotion_accuracies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('emotion', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emotion_accuracies_id'), 'emotion_accuracies', ['id'], unique=False)
    op.create_table('emotion_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('emotion', sa.Enum('HAPPY', 'SAD', 'ANGRY', 'SURPRISED', 'NEUTRAL', 'FEAR', 'DISAPPOINTMENT', 'GRIEF', 'LONELINESS', 'MELANCHOLY', 'JOY', 'EXCITEMENT', 'CONTENTMENT', 'PRIDE', 'FRUSTRATION', 'RAGE', 'IRRITATION', 'ANXIETY', 'DREAD', 'PANIC', 'WORRY', 'AMAZEMENT', 'ASTONISHMENT', 'SHOCK', 'EMBARRASSMENT', 'SHAME', 'GUILT', 'HOPE', name='emotiontype'), nullable=False),
    sa.Column('intensity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_emotion_data_emotion', 'emotion_data', ['emotion'], unique=False)
    op.create_index(op.f('ix_emotion_data_id'), 'emotion_data', ['id'], unique=False)
    op.create_index('ix_emotion_data_timestamp', 'emotion_data', ['timestamp'], unique=False)
    op.create_index('ix_emotion_data_user_id', 'emotion_data', ['user_id'], unique=False)
    op.create_table('emotion_trends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('period_start', sa.TIMESTAMP(), nullable=False),
    sa.Column('period_end', sa.TIMESTAMP(), nullable=False),
    sa.Column('emotion_summary', sa.JSON(), nullable=False),
    sa.Column('average_intensity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emotion_trends_id'), 'emotion_trends', ['id'], unique=False)
    op.create_index('ix_emotion_trends_period_end', 'emotion_trends', ['period_end'], unique=False)
    op.create_index('ix_emotion_trends_period_start', 'emotion_trends', ['period_start'], unique=False)
    op.create_index('ix_emotion_trends_user_id', 'emotion_trends', ['user_id'], unique=False)
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_type', sa.Enum('ERROR', 'INFO', 'WARNING', name='logtype'), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.Enum('LOGIN', 'LOGOUT', 'REGISTER', 'VIEW_PROFILE', 'UPDATE_PROFILE', 'DELETE_ACCOUNT', 'CHANGE_PASSWORD', 'VIEW_PUBLIC_PROFILE', 'VIEW_USERS', 'UPDATE_USER_ROLE', 'MANAGE_USER_ACCESS', 'GIVE_FEEDBACK', 'DELETE_FEEDBACK', 'VIEW_TREND', 'SAVING_EMOTION_TREND', 'SAVE_REPORT', 'GET_ALL_REPORTS', 'GET_REPORT_BY_ID', 'GET_ALL_RECORDS', 'GET_FILTERED_REPORTS', 'GET_ALL_TRENDS', 'GET_TREND_BY_ID', 'GET_ONE_RECORD', 'EMAIL_SENT', 'REPORT_CREATED', name='logaction'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logs_id'), 'logs', ['id'], unique=False)
    op.create_index('ix_logs_log_type', 'logs', ['log_type'], unique=False)
    op.create_index('ix_logs_timestamp', 'logs', ['timestamp'], unique=False)
    op.create_index('ix_logs_user_id', 'logs', ['user_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.Enum('AI_ACCURACY', 'EMOTION_REPORT', 'INFORMATIVE', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('SENT', 'PENDING', 'FAILED', name='notificationstatus'), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('sent_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.Enum('EMOTION_TRACKING', 'AI_ACCURACY', name='reporttype'), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('generated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('emotion_summary', sa.JSON(), nullable=True),
    sa.Column('comparison_data', sa.JSON(), nullable=True),
    sa.Column('weekly_trend', sa.JSON(), nullable=True),
    sa.Column('monthly_trend', sa.JSON(), nullable=True),
    sa.Column('export_status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='exportstatus'), nullable=False),
    sa.Column('export_format', sa.Enum('PDF', name='exportformat'), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_table('user_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feedback_type', sa.Enum('BUG', 'FEATURE_REQUEST', 'SUGGESTION', name='feedbacktype'), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_feedback_id'), 'user_feedback', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_feedback_id'), table_name='user_feedback')
    op.drop_table('user_feedback')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_logs_user_id', table_name='logs')
    op.drop_index('ix_logs_timestamp', table_name='logs')
    op.drop_index('ix_logs_log_type', table_name='logs')
    op.drop_index(op.f('ix_logs_id'), table_name='logs')
    op.drop_table('logs')
    op.drop_index('ix_emotion_trends_user_id', table_name='emotion_trends')
    op.drop_index('ix_emotion_trends_period_start', table_name='emotion_trends')
    op.drop_index('ix_emotion_trends_period_end', table_name='emotion_trends')
    op.drop_index(op.f('ix_emotion_trends_id'), table_name='emotion_trends')
    op.drop_table('emotion_trends')
    op.drop_index('ix_emotion_data_user_id', table_name='emotion_data')
    op.drop_index('ix_emotion_data_timestamp', table_name='emotion_data')
    op.drop_index(op.f('ix_emotion_data_id'), table_name='emotion_data')
    op.drop_index('ix_emotion_data_emotion', table_name='emotion_data')
    op.drop_table('emotion_data')
    op.drop_index(op.f('ix_emotion_accuracies_id'), table_name='emotion_accuracies')
    op.drop_table('emotion_accuracies')
    op.drop_index(op.f('ix_admin_actions_id'), table_name='admin_actions')
    op.drop_table('admin_actions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
